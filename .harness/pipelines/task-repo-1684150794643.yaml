pipeline:
  identifier: Build_task_repo_1684150822711
  name: Build task-repo
  orgIdentifier: default
  projectIdentifier: githubtask
  stages:
    - stage:
        name: Build
        identifier: Build
        type: CI
        spec:
          cloneCodebase: false
          execution:
            steps:
              - step:
                  type: GitClone
                  name: GitClone
                  identifier: GitClone_1
                  spec:
                    connectorRef: UnitedSCM
                    repoName: task-repo
                    build:
                      type: branch
                      spec:
                        branch: main
              - step:
                  type: Run
                  name: Run
                  identifier: Run_1
                  spec:
                    shell: Bash
                    command: |
                      #!/bin/bash

                      # Step 2: Install a service using Docker
                      service_name="<+pipeline.stages.Build.variables.service>"  # Service name passed as a command-line argument
                      service_tag="<+pipeline.stages.Build.variables.tag>"   # Service tag passed as a command-line argument

                      # Install the service using Docker (replace the 'docker run' command with the appropriate installation command for your specific service)
                      docker run -d --name "$service_name" your-service-image:"$service_tag"

                      # Step 3: Fetch the service name and its tag
                      installed_service_name=$(docker inspect --format '{{ .Name }}' "$service_name" | sed 's/\///g')
                      installed_service_tag="$service_tag"

                      # Step 4: Check if the service name and tag exist in the file on GitHub
                      # GitHub repository details
                      github_repo="task-repo"
                      github_token="<+pipeline.stages.Build.variables.task123>"
                      file_path="task-repo/json.file"

                      # Fetch the file from GitHub
                      file_content=$(curl -s -H "Authorization: token $github_token" "https://api.github.com/repos/$github_repo/json.file")

                      # Check if the service name and tag exist in the file
                      if [[ "$file_content" == *"$installed_service_name"* ]] && [[ "$file_content" == *"$installed_service_tag"* ]]; then
                        echo "Service and tag already exist in the file on GitHub."
                      else
                        # Update or add the service name and tag to the file
                        updated_content=$(echo "$file_content" | jq --arg service "$installed_service_name" --arg tag "$installed_service_tag" '. + [{service: $service, tag: $tag}]')

                        # Encode the updated content in base64
                        encoded_content=$(echo "$updated_content" | base64)

                        # Update the file on GitHub
                        response=$(curl -X PUT -s -H "Authorization: token $github_token" -H "Content-Type: application/json" -d "{\"message\": \"Update service\", \"content\": \"$encoded_content\"}" "https://api.github.com/repos/$github_repo/json.file")

                        if [[ "$response" =~ "sha" ]]; then
                          echo "Service and tag successfully updated in the file on GitHub."
                        else
                          echo "An error occurred while updating the service and tag in the file on GitHub."
                        fi
                      fi
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
        variables:
          - name: task123
            type: Secret
            description: ""
            value: HarnessPATGIT
          - name: service
            type: String
            description: ""
            value: nginx
          - name: tag
            type: String
            description: ""
            value: latest
