pipeline:
  identifier: Build_task_repo_1684150822711
  name: Build task-repo
  orgIdentifier: default
  projectIdentifier: githubtask
  stages:
    - stage:
        name: Build
        identifier: Build
        type: CI
        spec:
          cloneCodebase: false
          execution:
            steps:
              - step:
                  type: GitClone
                  name: GitClone
                  identifier: GitClone_1
                  spec:
                    connectorRef: UnitedSCM
                    repoName: task-repo
                    build:
                      type: branch
                      spec:
                        branch: main
              - step:
                  type: Run
                  name: Run
                  identifier: Run_1
                  spec:
                    shell: Bash
                    command: "#!/bin/bash\nsudo apt-get install jq curl wget unzip -y\nsudo apt-get update && apt-get upgrade -y\n\n# Deploy Service\nservice_name=\"<+pipeline.stages.Build.variables.service>\"\nservice_tag=\"<+pipeline.stages.Build.variables.tag>\"\nGITHUB_TOKEN=\"<+pipeline.stages.Build.variables.task123>\"\ndocker\_run\_-d\_--name\_\"$service_name\"\_<+pipeline.stages.Build.variables.service>:\"$service_tag\"\n# Check GitHub File\nresponse=$(curl -s -w \"%{http_code}\" -H \"Authorization: Bearer $GITHUB_TOKEN\" -X GET https://api.github.com/repos/shivakumar123441/task-repo/json.file)\nresponseCode=$(tail -n1 <<< \"$response\")\n\nif [[ \"$responseCode\" -eq 200 ]]; then\n  action=\"update\"\nelse\n  action=\"create\"\nfi\n\n# Generate Service JSON\n\necho \"{ \\\"name\\\": \\\"$service_name\\\", \\\"version\\\": \\\"$service_tag\\\" }\" > json.file\n\n# Push to GitHub\nbase64_content=$(base64 service.json)\ncurl -s -o /dev/null -H \"Authorization: Bearer $GITHUB_TOKEN\" -X PUT -d \"{\\\"message\\\": \\\"$action json.file\\\", \\\"content\\\": \\\"$base64_content\\\", \\\"branch\\\": \\\"main\\\"}\" https://api.github.com/repos/shivakumar123441/task-repo/json.file\n\necho \"Pipeline completed.\"\n"
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
        variables:
          - name: task123
            type: Secret
            description: ""
            value: HarnessPATGIT
          - name: service
            type: String
            description: ""
            value: nginx
          - name: tag
            type: String
            description: ""
            value: latest
