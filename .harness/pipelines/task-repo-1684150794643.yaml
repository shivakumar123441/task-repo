pipeline:
  identifier: Build_task_repo_1684150822711
  name: Build task-repo
  orgIdentifier: default
  projectIdentifier: githubtask
  stages:
    - stage:
        name: Build
        identifier: Build
        type: CI
        spec:
          cloneCodebase: false
          execution:
            steps:
              - step:
                  type: GitClone
                  name: GitClone
                  identifier: GitClone_1
                  spec:
                    connectorRef: UnitedSCM
                    repoName: task-repo
                    build:
                      type: branch
                      spec:
                        branch: main
              - step:
                  type: Run
                  name: Run
                  identifier: Run_1
                  spec:
                    shell: Bash
                    command: "#!/bin/bash\n\n# Step 1: Linux server (already assumed to be present)\nsudo apt-get install jq wget curl unzip -y\nsudo apt-get update -y\n\n# Step 2: Install the service using Docker\nservice_name=\"<+pipeline.stages.Build.variables.service>\"\nservice_tag=\"<+pipeline.stages.Build.variables.tag>\"\n\n# Pull the Docker image\ndocker pull \"$service_name\":\"$service_tag\"\n\n# Run the Docker container\ndocker run -d --name \"$service_name\" \"$service_name\":\"$service_tag\"\n\n# Step 3: Fetch the service name and its tag\ninstalled_service_name=\"$service_name\"\ninstalled_service_tag=\"$service_tag\"\n\n# Step 4: Check if the service name and tag exist in the file on GitHub\n# GitHub repository details\ngithub_repo=\"task-repo\"\ngithub_token=\"<+pipeline.stages.Build.variables.task123>\"\nusername=\"shivakumar123441\"\ncd /harness/task-repo/\nfile_content=$(cat /harness/task-repo/json.file)\n\n# Check if the service name and tag exist in the file\nif [[ \"$file_content\" == *\"$installed_service_name\"* ]] && [[ \"$file_content\" == *\"$installed_service_tag\"* ]]; then\n  echo \"Service and tag already exist in the file on GitHub.\"\nelse\n  # Update or add the service name and tag to the file\n  updated_content= $(echo '[{\"service\": \"<+pipeline.stages.Build.variables.service>\", \"tag\": \"<+pipeline.stages.Build.variables.tag>\"}]' | jq '. + [{\"service\": \"<+pipeline.stages.Build.variables.service>\",\"tag\": \"<+pipeline.stages.Build.variables.tag>\"}]')\nfi\necho\_\"$updated_content\"\_>\_/harness/task-repo/json.file\ngit remote set-url origin https://$username:$github_token@github.com/$username/task-repo.git\ngit add .\n\n# Commit the changes\ngit commit -m \"Update JSON file\"\n\n# Push the changes back to the repository\ngit push -u origin main\n"
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
        variables:
          - name: task123
            type: Secret
            description: ""
            value: HarnessPATGIT
          - name: service
            type: String
            description: ""
            value: nginx
          - name: tag
            type: String
            description: ""
            value: latest
